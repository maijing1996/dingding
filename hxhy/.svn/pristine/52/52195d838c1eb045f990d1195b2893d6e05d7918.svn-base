package com.hxhy.controller.manager.confine;

import java.util.List;
import java.util.Map;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.hxhy.exception.BusinessException;
import com.hxhy.model.common.BaseResponse;
import com.hxhy.model.dto.MenuPackage;
import com.hxhy.model.po.HxhyRole;
import com.hxhy.service.HxhyMenuService;
import com.hxhy.service.HxhyRoleService;
import com.hxhy.util.RegexUtil;

@Controller
@ResponseBody
@RequestMapping("/manager/confine/role")
public class HxhyRoleController {

	@Autowired
	private HxhyRoleService hxhyRoleService;
	@Autowired
	private HxhyMenuService hxhyMenuService;
	
	/**
	 * 获取管理员角色数据
	 * @param map
	 * @return
	 * @throws BusinessException
	 */
	@RequestMapping(value="/info", method=RequestMethod.POST, produces="application/json;charset=utf-8")
	public BaseResponse listInfo() {
		BaseResponse baseResponse = new BaseResponse();
		List<HxhyRole> list = hxhyRoleService.listAllInfo();
		if(list != null && list.size() > 0) {
			return baseResponse.setSuccessList(200, list, list.size(), 1, 1, list.size());
		} else {
			return baseResponse.setError(404, "没有数据");
		}
	}
	
	/**
	 * 删除单个角色信息
	 * @param id
	 * @return
	 * @throws BusinessException
	 */
	@RequestMapping(value="/delete", method=RequestMethod.POST, produces="application/json;charset=utf-8")
	public BaseResponse delete(@RequestBody Map<String, Long> map) throws BusinessException {
		BaseResponse baseResponse = new BaseResponse();
		if(map.get("id") != null) {
			hxhyRoleService.deleteById(map.get("id"));
			return baseResponse.setSuccess("管理员角色已经删除！");
		} else {
			return baseResponse.setError(404, "操作对象不明确");
		}
	}
	
	/**
	 * 批量删除角色信息
	 * @param ids
	 * @return
	 * @throws BusinessException 
	 */
	@RequestMapping(value="/deletes", method=RequestMethod.POST, produces="application/json;charset=utf-8")
	public BaseResponse deletes(@RequestBody Map<String, String> map) throws BusinessException {
		BaseResponse baseResponse = new BaseResponse();
		if(map.get("ids") != null && RegexUtil.matches(RegexUtil.IDS_REGEX, map.get("ids"))) {
			hxhyRoleService.deleteByIds(map.get("ids"));
			return baseResponse.setSuccess("管理员角色已经删除！");
		} else {
			return baseResponse.setError(404, "操作对象不明确");
		}
	}
	
	/**
	 * 修改角色信息
	 * @param ids
	 * @return
	 * @throws BusinessException
	 */
	@RequestMapping(value="/update", method=RequestMethod.POST, produces="application/json;charset=utf-8")
	public BaseResponse update(@RequestBody HxhyRole hxhyRole) throws BusinessException {
		BaseResponse baseResponse = new BaseResponse();
		if(hxhyRole.getId() != null) {
			hxhyRoleService.update(hxhyRole);
			return baseResponse.setSuccess("管理员角色信息已修改！");
		} else {
			return baseResponse.setError(404, "操作对象不明确");
		}
	}
	
	/**
	 * 角色信息注册
	 * @param ideaAdminRole
	 * @return
	 * @throws BusinessException
	 */
	@RequestMapping(value="/insert", method=RequestMethod.POST, produces="application/json;charset=utf-8")
	public BaseResponse save(@RequestBody HxhyRole hxhyRole) throws BusinessException {
		BaseResponse baseResponse = new BaseResponse();
		if(hxhyRole.getId() == null) {
			if(hxhyRole.getTitle() == null) {
				return baseResponse.setError(404, "请输入管理员角色名称！");
			}
			hxhyRoleService.save(hxhyRole);
			return baseResponse.setSuccess("管理员角色信息已添加！");
		} else {
			return baseResponse.setError(404, "操作失败，非法操作！");
		}
	}
	
	/**
	 * 获得菜单列表
	 * @param ideaAdminRole
	 * @return
	 * @throws BusinessException
	 */
	@RequestMapping(value="/menu", method=RequestMethod.POST, produces="application/json;charset=utf-8")
	public BaseResponse menu() throws BusinessException {
		BaseResponse baseResponse = new BaseResponse();
		List<MenuPackage> menuPackage = hxhyMenuService.menu();
		return baseResponse.setSuccess(null, menuPackage);
	}
}
