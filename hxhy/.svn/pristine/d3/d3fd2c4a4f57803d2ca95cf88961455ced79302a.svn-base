package com.hxhy.controller.manager;

import javax.servlet.http.HttpServletRequest;



import java.util.Date;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;

import com.alibaba.fastjson.JSONObject;
import com.hxhy.controller.BaseController;
import com.hxhy.exception.BusinessException;
import com.hxhy.model.common.BaseResponse;
import com.hxhy.model.dto.LoginInfo;
import com.hxhy.model.po.HxhyManager;
import com.hxhy.model.po.HxhyOperationLog;
import com.hxhy.service.HxhyManagerService;
import com.hxhy.service.HxhyMenuService;
import com.hxhy.service.HxhyOperationLogService;
import com.hxhy.util.DateUtil;
import com.hxhy.util.HttpUtil;
import com.hxhy.util.MD5Util;

@Controller
@ResponseBody
@RequestMapping("/manager/login")
public class LoginManager extends BaseController {

	@Autowired
	private HxhyManagerService hxhyManagerService;
	@Autowired
	private HxhyOperationLogService hxhyOperationLogService;
	@Autowired
	private HxhyMenuService hxhyMenuService;

	/**
	 * 管理系统登陆操作
	 * 
	 * @param loginInfo
	 * @return
	 */
	@RequestMapping(value = "/enter", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
	public BaseResponse login(HttpServletRequest request, @RequestBody LoginInfo loginInfo) {
		BaseResponse baseResponse = new BaseResponse();
		if (loginInfo.getAccount() == null) {
			return baseResponse.setError(404, "请输入账号！");
		}
		if (loginInfo.getPasswd() == null) {
			return baseResponse.setError(404, "请输入密码！");
		}

		String passwd = MD5Util.MD5(loginInfo.getPasswd());
		HxhyManager hxhyManager = hxhyManagerService.login(loginInfo.getAccount(), passwd);
		
		String ip = HttpUtil.getClientIP(request);
		if (hxhyManager != null) {
			if (hxhyManager.getIs_work() == 1) {
				this.setCurrentUser(request, hxhyManager);

				try {
					// 系统日志
					HxhyOperationLog hxhyOperationLog = new HxhyOperationLog();
					hxhyOperationLog.setAdd_date(new Date());
					hxhyOperationLog.setInfo("用户登入成功！");
					hxhyOperationLog.setIp(ip);
					hxhyOperationLog.setState(1);
					hxhyOperationLog.setType(1);
					hxhyOperationLog.setUrl("/manager/login/enter");
					hxhyOperationLog.setUser_id(hxhyManager.getId());

					hxhyOperationLogService.save(hxhyOperationLog);

				} catch (BusinessException e) {
					e.printStackTrace();
				}

				return baseResponse.setSuccess(null, hxhyManager.getId());
			} else {
				return baseResponse.setError(405, "用户未激活！");
			}
		} else {
			try {
				// 系统日志
				HxhyOperationLog hxhyOperationLog = new HxhyOperationLog();
				hxhyOperationLog.setAdd_date(new Date());
				hxhyOperationLog.setInfo("账号密码错误！");
				hxhyOperationLog.setIp(ip);
				hxhyOperationLog.setState(0);
				hxhyOperationLog.setType(1);
				hxhyOperationLog.setUrl("/manager/login/enter");
				hxhyOperationLog.setUser_id(0L);

				hxhyOperationLogService.save(hxhyOperationLog);

			} catch (BusinessException e) {
				e.printStackTrace();
			}
			return baseResponse.setError(405, "账号密码错误！");
		}

	}

	/**
	 * 管理系统登陆操作
	 * 
	 * @param loginInfo
	 * @return
	 */
	@RequestMapping(value = "/exit", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
	public String exitCurrent(HttpServletRequest request) {
		BaseResponse baseResponse = new BaseResponse();
		this.exitCurrentUser(request);
		baseResponse.setSuccess("退出成功");
		return JSONObject.toJSONString(baseResponse);
	}

	/**
	 * 后台菜单
	 * 
	 * @param request
	 * @return
	 */
	/*@RequestMapping(value = "/menu", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
	public String menu(HttpServletRequest request) {
		Map<String, Object> map = new HashMap<String, Object>();
		String key = mySiteSetting.getSessionName() + request.getSession().getId();
		HxhyManager hxhyManager = (HxhyManager) redisUtil.get(key);

		if (hxhyManager != null) {
			if (hxhyManager.getRole_id() == 0) {
				List<HxhyMenu> list = hxhyMenuService.getMenu();
			} else {
				
			}
		}

		return null;
	}*/

}
