package com.hxhy.controller;

import java.io.BufferedReader;
import java.io.ByteArrayInputStream;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URISyntaxException;
import java.util.ArrayList;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;
import org.springframework.web.multipart.MultipartHttpServletRequest;

import com.alibaba.fastjson.JSONObject;
import com.hxhy.util.StringUtil;
 
@Controller
@RequestMapping("/upload")
public class FileUploadController {

    private static Logger logger = LoggerFactory.getLogger(FileUploadController.class);

    /**
     *
     *  异步上传图片
     *
     * @param multipartRequest
     * @return
     * @throws URISyntaxException
     */
    @ResponseBody
    @RequestMapping(value = "/file", method = RequestMethod.POST, produces = "application/json;charset=utf-8")
    public String UploadAction(MultipartHttpServletRequest multipartRequest) throws URISyntaxException {

        MultipartFile file = multipartRequest.getFile("file");
        if (StringUtil.isNotNullOrEmpty(file)) {
            try {
            	StringBuffer buffer = new StringBuffer();
            	
            	//List<> list = new ArrayList<>();
            	
            	byte[] byt = file.getBytes();
            	InputStream inputStream = new ByteArrayInputStream(byt);
            	// 将返回的输入流转换成字符串
    			InputStreamReader inputStreamReader = new InputStreamReader(inputStream, "UTF-8");
    			BufferedReader bufferedReader = new BufferedReader(inputStreamReader);
    			
    			String str = null;
    			while ((str = bufferedReader.readLine()) != null) {
    				buffer.append(str);
    			}
                
    			System.out.println(buffer.toString());
    			System.out.println(JSONObject.toJSONString(buffer.toString()));
                return JSONObject.toJSONString(buffer.toString());
            } catch (IOException e) {
                logger.error("上次图片失败"+e);
            }
        }
        return null;
    }
}
